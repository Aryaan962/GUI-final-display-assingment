/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tvmediastuff;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import javax.swing.Timer;

/**
 *
 * @author aryaan
 */
public class WeatherAPI extends javax.swing.JPanel {

    javax.swing.JLabel time, theWeather, temp, feelsLike, humid;

    /**
     * Creates new form WeatherAPI
     */
    public WeatherAPI() {
        initComponents();

    }

    private void update(javax.swing.JLabel theWeather, javax.swing.JLabel temp, javax.swing.JLabel feelsLike, javax.swing.JLabel humid, javax.swing.JLabel time) {
        weather.update();
        //set label text
        theWeather.setText("Weather: " + weather.getWeather());
        temp.setText("Temperature: " + weather.getTemp());
        feelsLike.setText("Feels like: " + weather.getFeelsLike());
        humid.setText("Humidity: " + weather.getHumidity());
        time.setText("Time: " + timeDate());
    }

    /**
     * set up the labels for the weather
     *
     * @param theWeather weather label
     * @param temp temperature label
     * @param feelsLike feels like temperature label
     * @param humid humidity label
     * @param time time label
     */
    public void anim(javax.swing.JLabel theWeather, javax.swing.JLabel temp, javax.swing.JLabel feelsLike, javax.swing.JLabel humid, javax.swing.JLabel time) {
        //set a timer for animation
        this.theWeather = theWeather;
        this.temp = temp;
        this.feelsLike = feelsLike;
        this.humid = humid;
        this.time = time;
        Timer t1 = new Timer(5000, new TimerListener());
        t1.start();
    }

    /**
     * get time and date
     *
     * @return time and date as a string
     */
    public static String timeDate() {
        DateTimeFormatter format = DateTimeFormatter.ofPattern("yyyy/MM/dd HH:mm");
        LocalDateTime now = LocalDateTime.now();
        return format.format(now);
    }

    public class TimerListener implements ActionListener {

        @Override
        public void actionPerformed(ActionEvent e) {
            update(theWeather, temp, feelsLike, humid, time);
            //update window
            repaint();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
